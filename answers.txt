List Initialization:
--------------------

i.  Please describe the pros and cons of using asynchronous requests from
the client to the web service?

 cons:
 1. Multiple asyc call (ex: a keypress event from the client) would queue up in the
 	callback, unless, pending callbacks are implemented correctly, response is not
 	guaranteed.


 pros:
 1. Better user response , client don't have to wait until the callback is processed.
 2. Processing large data sets.


ii. Data-binding is a technique for automatically rendering changes to the
underlying data model, for what type of data would a split local caching to
remote model help and when would the synchronization be potentially seen
as a drawback?

When the client has to process a huge data set, eg a feed of > 10,000 rows, its better to
cache partial data after the initial rendering and model could be set with the isDirty
boolean flag that gets updates based on the model changes to update the data on need basis.
The synchronization would be a great drawback in the same example when the user has to
wait for the response.

List Manipulation:
------------------
i. Please describe the difference between model data-binding and input
commanding.
  - Model data-binding:
		In this example <select data-bind='options: channelId, channelId is created as an
		model attr and its bounded to the views dropdown component, and the channelId values
		are automatically populated from the model

	- input commanding
	   I did not use the input field, but based on the api document, input field provide
	   instant updates from the DOM nodes for autocomplete and clipboard events.

Image Display:
-------------
i. Please describe issues that must be considered when manipulating data
such as images?
	- Size of the image
	- number of data sets and the amount of images that will be processed (performance)
	- JPEG's are the best image option, dont use Tiff's
	- <img src=""> is a very bad practice, this makes unnecessary traffic to the server
	   looking for empty sources
ii. How does the target browser/device influence the delivery of data?
	 - size of the image, eg: case of handleheld devices/tables, application caching in
	   these devices are minimal. Special design considerations should be made before
	   processing large data sets
	 - pages with large data sets and higher resolution/ larger sizers would take longer
	   rendering time, that gets a huge hit on the usability of the page.


2. Compose a programming test question:

	- On a screen few random pixels are exposed {(0,0), (2,0), (5,0)}, {(0,1), (0,6)}, {4,0}, {6,0}
	- write a javascript code, that returns maximum #points the line => for eg in this case == 3
	- you have access to helper lib
	  getLine(p1, p2){returns {slope:value};}
	  isOnLine(point) => return boolean



